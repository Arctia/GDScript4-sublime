{
  "scope": "source.gdscript",
  "completions": [
    {
      "trigger": "add_track(type, at_pos)",
      "contents": "add_track(${1:type}, ${2:at_pos})"
    },
    {
      "trigger": "remove_track(idx)",
      "contents": "remove_track(${1:idx})"
    },
    {
      "trigger": "get_track_count()",
      "contents": "get_track_count()"
    },
    {
      "trigger": "track_get_type(idx)",
      "contents": "track_get_type(${1:idx})"
    },
    {
      "trigger": "track_get_path(idx)",
      "contents": "track_get_path(${1:idx})"
    },
    {
      "trigger": "track_set_path(idx, path)",
      "contents": "track_set_path(${1:idx}, ${2:path})"
    },
    {
      "trigger": "find_track(path)",
      "contents": "find_track(${1:path})"
    },
    {
      "trigger": "track_move_up(idx)",
      "contents": "track_move_up(${1:idx})"
    },
    {
      "trigger": "track_move_down(idx)",
      "contents": "track_move_down(${1:idx})"
    },
    {
      "trigger": "transform_track_insert_key(idx, time, loc, rot, scale)",
      "contents": "transform_track_insert_key(${1:idx}, ${2:time}, ${3:loc}, ${4:rot}, ${5:scale})"
    },
    {
      "trigger": "track_insert_key(idx, time, key, transition)",
      "contents": "track_insert_key(${1:idx}, ${2:time}, ${3:key}, ${4:transition})"
    },
    {
      "trigger": "track_remove_key(idx, key_idx)",
      "contents": "track_remove_key(${1:idx}, ${2:key_idx})"
    },
    {
      "trigger": "track_remove_key_at_pos(idx, pos)",
      "contents": "track_remove_key_at_pos(${1:idx}, ${2:pos})"
    },
    {
      "trigger": "track_set_key_value(idx, key, value)",
      "contents": "track_set_key_value(${1:idx}, ${2:key}, ${3:value})"
    },
    {
      "trigger": "track_set_key_transition(idx, key_idx, transition)",
      "contents": "track_set_key_transition(${1:idx}, ${2:key_idx}, ${3:transition})"
    },
    {
      "trigger": "track_get_key_transition(idx, key_idx)",
      "contents": "track_get_key_transition(${1:idx}, ${2:key_idx})"
    },
    {
      "trigger": "track_get_key_count(idx)",
      "contents": "track_get_key_count(${1:idx})"
    },
    {
      "trigger": "track_get_key_value(idx, key_idx)",
      "contents": "track_get_key_value(${1:idx}, ${2:key_idx})"
    },
    {
      "trigger": "track_get_key_time(idx, key_idx)",
      "contents": "track_get_key_time(${1:idx}, ${2:key_idx})"
    },
    {
      "trigger": "track_find_key(idx, time, exact)",
      "contents": "track_find_key(${1:idx}, ${2:time}, ${3:exact})"
    },
    {
      "trigger": "track_set_interpolation_type(idx, interpolation)",
      "contents": "track_set_interpolation_type(${1:idx}, ${2:interpolation})"
    },
    {
      "trigger": "track_get_interpolation_type(idx)",
      "contents": "track_get_interpolation_type(${1:idx})"
    },
    {
      "trigger": "transform_track_interpolate(idx, time_sec)",
      "contents": "transform_track_interpolate(${1:idx}, ${2:time_sec})"
    },
    {
      "trigger": "value_track_set_continuous(idx, continuous)",
      "contents": "value_track_set_continuous(${1:idx}, ${2:continuous})"
    },
    {
      "trigger": "value_track_is_continuous(idx)",
      "contents": "value_track_is_continuous(${1:idx})"
    },
    {
      "trigger": "value_track_get_key_indices(idx, time_sec, delta)",
      "contents": "value_track_get_key_indices(${1:idx}, ${2:time_sec}, ${3:delta})"
    },
    {
      "trigger": "method_track_get_key_indices(idx, time_sec, delta)",
      "contents": "method_track_get_key_indices(${1:idx}, ${2:time_sec}, ${3:delta})"
    },
    {
      "trigger": "method_track_get_name(idx, key_idx)",
      "contents": "method_track_get_name(${1:idx}, ${2:key_idx})"
    },
    {
      "trigger": "method_track_get_params(idx, key_idx)",
      "contents": "method_track_get_params(${1:idx}, ${2:key_idx})"
    },
    {
      "trigger": "set_length(time_sec)",
      "contents": "set_length(${1:time_sec})"
    },
    {
      "trigger": "get_length()",
      "contents": "get_length()"
    },
    {
      "trigger": "set_loop(enabled)",
      "contents": "set_loop(${1:enabled})"
    },
    {
      "trigger": "has_loop()",
      "contents": "has_loop()"
    },
    {
      "trigger": "set_step(size_sec)",
      "contents": "set_step(${1:size_sec})"
    },
    {
      "trigger": "get_step()",
      "contents": "get_step()"
    },
    {
      "trigger": "clear()",
      "contents": "clear()"
    },
    "TYPE_VALUE",
    "TYPE_METHOD",
    "INTERPOLATION_NEAREST",
    "INTERPOLATION_LINEAR",
    "INTERPOLATION_CUBIC"
  ]
}